buildscript {
    repositories {
        mavenCentral()
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'idea'

version = makrivaVersion + '-1.12'
group = 'msifeed.makriva'
archivesBaseName = 'makriva'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'stable', version: '39-1.12'
    accessTransformer = file('src/main/resources/META-INF/accesstransfomer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            args "--tweakClass", "org.spongepowered.asm.launch.MixinTweaker",
                    "--mixin", "mixins.makriva.json",
                    "--username", "msifeed"

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            args "--tweakClass", "org.spongepowered.asm.launch.MixinTweaker",
                    "--mixin", "mixins.makriva.json"

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

repositories {
    maven { url 'https://www.cursemaven.com' }
    maven { url 'https://repo.spongepowered.org/repository/maven-public' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2859'

    embed project(':shared')
    embed 'org.spongepowered:mixin:0.8.3'
    implementation fg.deobf("curse.maven:more-player-models-221939:2837187")
}

mixin {
    add sourceSets.main, "makriva.refmap.json"
}

sourceSets {
    main { output.resourcesDir = output.classesDir }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }

    manifest.attributes(
            'TweakOrder': 0,
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': 'mixins.makriva.json',
            'FMLCorePluginContainsFMLMod': 'true',
            'ForceLoadAsMod': 'true',
    )
}

jar.finalizedBy('reobfJar')

idea {
    module {
        inheritOutputDirs = true
    }
}
subprojects {
    apply plugin: 'idea'
}